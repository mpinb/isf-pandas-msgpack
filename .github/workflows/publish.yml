name: Publish to PyPI

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install cython setuptools setuptools-scm build twine

      - name: Extract version from Git tag
        id: get_version
        run: |
          VERSION=${{ github.event.release.tag_name }}
          echo "VERSION=$VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
        shell: bash

      - name: Build the package with version from Git tag
        env:
          SETUPTOOLS_SCM_PRETEND_VERSION: ${{ env.VERSION }}
        run: |
          python -m build --sdist --wheel

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.os }}
          path: dist/*

  upload-to-pypi:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-ubuntu-latest
          path: dist/linux
      - name: Download artifacts (macOS)
        uses: actions/download-artifact@v4
        with:
          name: dist-macos-latest
          path: dist/macos
      - name: Download artifacts (Windows)
        uses: actions/download-artifact@v4
        with:
          name: dist-windows-latest
          path: dist/windows

      - name: Combine all wheels
        run: |
          mkdir -p dist/all
          cp dist/linux/* dist/all/
          cp dist/macos/* dist/all/
          cp dist/windows/* dist/all/
        shell: bash

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TESTPYPI_API_TOKEN }}
        run: |
          pip install twine
          twine upload dist/all/* --repository testpypi